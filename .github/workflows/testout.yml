name: Test Kernel Build Out Folder

on:
  workflow_dispatch:

env:
  ROOTFS_DIR: ubuntu-focal-desktop-arm64  # 假设 rootfs 已经解压好
  CUSTOM_DTS: dts/rk3399-nanopi4-rev00.dts

jobs:
  test-out:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. 安装依赖
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu bison flex libssl-dev \
            make python3 bc git fakeroot build-essential ncurses-dev \
            gawk wget tar xz-utils cpio unzip rsync file aria2

      # 3. Clone sd-fuse_rk3399 并确保 out 文件夹存在
      - name: Clone sd-fuse_rk3399
        run: |
          git clone https://github.com/friendlyarm/sd-fuse_rk3399.git -b kernel-4.19
          mkdir -p sd-fuse_rk3399/out
          ls -lh sd-fuse_rk3399

      # 4. Clone kernel 并检查 DTS
      - name: Clone kernel
        run: |
          git clone https://github.com/friendlyarm/kernel-rockchip --depth 1 -b nanopi4-v4.19.y kernel-rk3399
          if [ ! -d "kernel-rk3399/arch/arm64/boot/dts/rockchip" ]; then
            echo "❌ ERROR: Kernel DTS folder not found!"
            exit 1
          fi
          ls kernel-rk3399/arch/arm64/boot/dts/rockchip

      # 5. 覆盖自定义 DTS
      - name: Copy custom DTS
        run: |
          cp $GITHUB_WORKSPACE/${CUSTOM_DTS} kernel-rk3399/arch/arm64/boot/dts/rockchip/
          echo "✅ Custom DTS copied"

      # 6. 测试 kernel build（只验证 out 目录使用是否正常）
      - name: Test Build Kernel
        run: |
          # 确保 out 目录存在
          mkdir -p sd-fuse_rk3399/out
          echo "Using out directory: $(pwd)/sd-fuse_rk3399/out"
          KERNEL_SRC=$PWD/kernel-rk3399 ./sd-fuse_rk3399/build-kernel.sh $ROOTFS_DIR
