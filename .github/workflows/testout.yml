name: Build Ubuntu Focal Image (RK3399)

on:
  workflow_dispatch:

env:
  ROOTFS_TGZ_ID: 1LgmYqwXrX6O8YGxgIN9mS9upcOMnpIT5
  ROOTFS_TGZ_FILE: ubuntu-focal-desktop-arm64-images.tgz
  CUSTOM_DTS: dts/rk3399-nanopi4-rev00.dts

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository (含 DTS 和 build 脚本)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. 安装依赖
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu bison flex libssl-dev \
            make python3 bc git fakeroot build-essential ncurses-dev \
            gawk wget tar xz-utils cpio unzip rsync file aria2
          pip install gdown

      # 3. 确保 out 目录存在（仓库根目录 + sd-fuse_rk3399 内）
      - name: Ensure out directories exist
        run: |
          mkdir -p out
          mkdir -p sd-fuse_rk3399/out
          ls -lh
          echo "✅ Out directories prepared"

      # 4. 下载 rootfs
      - name: Download rootfs from Google Drive
        run: |
          echo "⬇️ Downloading ubuntu-focal-desktop rootfs..."
          gdown "https://drive.google.com/uc?id=${ROOTFS_TGZ_ID}&export=download" -O ${ROOTFS_TGZ_FILE}
          ls -lh ${ROOTFS_TGZ_FILE}

      # 5. 解压 rootfs
      - name: Extract rootfs
        run: |
          tar xvzf ${ROOTFS_TGZ_FILE}
          echo "解压目录:"
          ls -lh

      # 6. 自动检测 rootfs 目录
      - name: Detect rootfs directory
        id: detect-rootfs
        run: |
          ROOTFS_DIR=$(ls -d */ | grep "ubuntu-focal-desktop" | head -n1 | sed 's#/##')
          if [ -z "$ROOTFS_DIR" ]; then
            echo "❌ ERROR: 未找到 ubuntu-focal-desktop rootfs 目录"
            exit 1
          fi
          echo "✅ Found rootfs directory: $ROOTFS_DIR"
          echo "rootfs_dir=$ROOTFS_DIR" >> $GITHUB_OUTPUT

      # 7. Clone sd-fuse_rk3399 build scripts
      - name: Clone sd-fuse_rk3399
        run: |
          git clone https://github.com/friendlyarm/sd-fuse_rk3399.git -b kernel-4.19
          ls -lh sd-fuse_rk3399

      # 8. Clone kernel
      - name: Clone kernel
        run: |
          git clone https://github.com/friendlyarm/kernel-rockchip --depth 1 -b nanopi4-v4.19.y kernel-rk3399
          # 检查官方 DTS 是否存在
          if [ ! -d "kernel-rk3399/arch/arm64/boot/dts/rockchip" ]; then
            echo "❌ ERROR: Kernel DTS folder not found!"
            exit 1
          fi
          ls kernel-rk3399/arch/arm64/boot/dts/rockchip

      # 9. 覆盖自定义 DTS
      - name: Copy custom DTS
        run: |
          cp $GITHUB_WORKSPACE/${CUSTOM_DTS} kernel-rk3399/arch/arm64/boot/dts/rockchip/
          if [ ! -f kernel-rk3399/arch/arm64/boot/dts/rockchip/$(basename ${CUSTOM_DTS}) ]; then
            echo "❌ ERROR: Custom DTS copy failed!"
            exit 1
          fi
          echo "✅ Custom DTS copied"

      # 10. Build Kernel
      - name: Build Kernel
        run: |
          # root 目录和 sd-fuse 内 out 已存在
          echo "Using out directories:"
          echo "  Root out: $(pwd)/out"
          echo "  sd-fuse out: $(pwd)/sd-fuse_rk3399/out"
          KERNEL_SRC=$PWD/kernel-rk3399 ./sd-fuse_rk3399/build-kernel.sh ${{ steps.detect-rootfs.outputs.rootfs_dir }}

      # 11. Build Kernel headers
      - name: Build Kernel headers
        run: |
          MK_HEADERS_DEB=1 BUILD_THIRD_PARTY_DRIVER=0 \
          KERNEL_SRC=$PWD/kernel-rk3399 ./sd-fuse_rk3399/build-kernel.sh ${{ steps.detect-rootfs.outputs.rootfs_dir }}

      # 12. Clone and Build U-Boot
      - name: Build U-Boot
        run: |
          git clone https://github.com/friendlyarm/uboot-rockchip --depth 1 -b nanopi4-v2017.09 uboot-rockchip
          UBOOT_SRC=$PWD/uboot-rockchip ./sd-fuse_rk3399/build-uboot.sh ${{ steps.detect-rootfs.outputs.rootfs_dir }}

      # 13. Build final SD card image
      - name: Build final SD image
        run: |
          cd sd-fuse_rk3399
          ./mk-sd-image.sh ${{ steps.detect-rootfs.outputs.rootfs_dir }}
          ls -lh out/

      # 14. Upload SD image artifact
      - name: Upload SD image
        uses: actions/upload-artifact@v4
        with:
          name: rk3399-sd-image
          path: sd-fuse_rk3399/out/*.img
