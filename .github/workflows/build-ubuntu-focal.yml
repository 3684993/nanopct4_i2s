name: Build RK3399 FriendlyCore Focal Firmware

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the current repository (containing the modified DTS file)
    - name: Checkout current repository
      uses: actions/checkout@v4
      with:
        path: current-repo

    # Checkout the sd-fuse_rk3399 repository
    - name: Checkout sd-fuse_rk3399 repository
      uses: actions/checkout@v4
      with:
        repository: friendlyarm/sd-fuse_rk3399
        ref: kernel-4.19
        path: sd-fuse_rk3399

    # Install dependencies
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git build-essential crossbuild-essential-arm64 \
          bc kmod libncurses-dev flex bison libssl-dev tar \
          libelf-dev device-tree-compiler python3-pip fdisk
        pip3 install gdown

    # Install aarch64-gcc-11.3 toolchain
    - name: Install aarch64-gcc-11.3
      run: |
        git clone https://github.com/friendlyarm/prebuilts.git -b master --depth 1
        cd prebuilts/gcc-x64
        sudo tar xvf toolchain-11.3-aarch64.tar.xz -C /

    # Check for custom DTS file existence
    - name: Check custom DTS file existence
      run: |
        if [ ! -f current-repo/dts/rk3399-nanopi4-rev00.dts ]; then
          echo "Error: Custom DTS file 'current-repo/dts/rk3399-nanopi4-rev00.dts' not found."
          exit 1
        fi

    # Clean kernel-rk3399 directory if it exists
    - name: Clean kernel-rk3399 directory
      run: |
        if [ -d sd-fuse_rk3399/kernel-rk3399 ]; then
          echo "Cleaning existing kernel-rk3399 directory..."
          rm -rf sd-fuse_rk3399/kernel-rk3399
        fi

    # Clone kernel source
    - name: Clone kernel source
      working-directory: sd-fuse_rk3399
      run: |
        git clone https://github.com/friendlyarm/kernel-rockchip --depth 1 -b nanopi4-v4.19.y kernel-rk3399

    # Copy custom DTS file to kernel source (overwrite existing)
    - name: Copy custom DTS file
      run: |
        cp current-repo/dts/rk3399-nanopi4-rev00.dts sd-fuse_rk3399/kernel-rk3399/arch/arm64/boot/dts/rockchip/rk3399-nanopi4-rev00.dts
        if [ -f sd-fuse_rk3399/kernel-rk3399/arch/arm64/boot/dts/rockchip/rk3399-nanopi4-rev00.dts ]; then
          echo "Custom DTS file successfully copied to kernel source."
        else
          echo "Error: Failed to copy DTS file to kernel source."
          exit 1
        fi
        
    - name: Update kernel config for I2S and audio
      working-directory: sd-fuse_rk3399/kernel-rk3399
      run: |
        echo -e "CONFIG_SND_SOC_ROCKCHIP_I2S=y\nCONFIG_SND_SOC_SIMPLE_CARD=y\nCONFIG_SND_SOC=y\nCONFIG_SND=y" >> .config
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- olddefconfig

    # Verify kernel DTS Makefile includes rk3399-nanopi4-rev00.dtb
    - name: Verify kernel DTS Makefile
      run: |
        if ! grep -q "rk3399-nanopi4-rev00.dtb" sd-fuse_rk3399/kernel-rk3399/arch/arm64/boot/dts/rockchip/Makefile; then
          echo "Error: 'rk3399-nanopi4-rev00.dtb' not found in kernel DTS Makefile."
          echo "Adding 'rk3399-nanopi4-rev00.dtb' to Makefile..."
          echo "dtb-\$(CONFIG_ARCH_ROCKCHIP) += rk3399-nanopi4-rev00.dtb" >> sd-fuse_rk3399/kernel-rk3399/arch/arm64/boot/dts/rockchip/Makefile
        else
          echo "Kernel DTS Makefile already includes 'rk3399-nanopi4-rev00.dtb'."
        fi

    # Check if build.sh supports ubuntu-focal-desktop-arm64
    - name: Check build.sh support for ubuntu-focal-desktop-arm64
      working-directory: sd-fuse_rk3399
      run: |
        if ! grep -q "ubuntu-focal-desktop-arm64" build.sh; then
          echo "Error: build.sh does not support ubuntu-focal-desktop-arm64."
          exit 1
        fi
        echo "build.sh supports ubuntu-focal-desktop-arm64."

    # Download and extract ubuntu-focal-desktop-arm64 images
    - name: Download and extract ubuntu-focal-desktop-arm64
      working-directory: sd-fuse_rk3399
      run: |
        gdown https://drive.google.com/uc?id=1LgmYqwXrX6O8YGxgIN9mS9upcOMnpIT5 -O ubuntu-focal-desktop-arm64-images.tgz
        tar xvzf ubuntu-focal-desktop-arm64-images.tgz
        if [ -d ubuntu-focal-desktop-arm64 ]; then
          echo "Successfully extracted ubuntu-focal-desktop-arm64 images."
        else
          echo "Error: Failed to extract ubuntu-focal-desktop-arm64 images."
          exit 1
        fi

    # Compile kernel
    - name: Compile kernel
      working-directory: sd-fuse_rk3399
      run: |
        KERNEL_SRC=$PWD/kernel-rk3399 ./build-kernel.sh ubuntu-focal-desktop-arm64

    # Compile kernel headers
    - name: Compile kernel headers
      working-directory: sd-fuse_rk3399
      run: |
        MK_HEADERS_DEB=1 BUILD_THIRD_PARTY_DRIVER=0 KERNEL_SRC=$PWD/kernel-rk3399 ./build-kernel.sh ubuntu-focal-desktop-arm64

    # Clone and compile U-Boot
    - name: Compile U-Boot
      working-directory: sd-fuse_rk3399
      run: |
        git clone https://github.com/friendlyarm/uboot-rockchip --depth 1 -b nanopi4-v2017.09 uboot-rockchip
        UBOOT_SRC=$PWD/uboot-rockchip ./build-uboot.sh ubuntu-focal-desktop-arm64

    # Generate SD card firmware
    - name: Generate SD card firmware
      working-directory: sd-fuse_rk3399
      run: |
        sed -i 's/mmcblk1/mmcblk2/g' mk-sd-image.sh
        ./mk-sd-image.sh ubuntu-focal-desktop-arm64

    # Verify partition table
    - name: Verify partition table
      working-directory: sd-fuse_rk3399
      run: |
        fdisk -l out/rk3399-sd-ubuntu-focal-desktop-arm64-*.img
        if fdisk -l out/rk3399-sd-ubuntu-focal-desktop-arm64-*.img | grep -q "mmcblk2p.*ext4"; then
          echo "Partition with ext4 found in the image."
        else
          echo "Error: No ext4 partition found in the image."
        fi

    # Upload the generated firmware as an artifact
    - name: Upload firmware artifact
      uses: actions/upload-artifact@v4
      with:
        name: rk3399-sd-ubuntu-focal-desktop
        path: sd-fuse_rk3399/out/rk3399-sd-ubuntu-focal-desktop-arm64-*.img
        retention-days: 7
